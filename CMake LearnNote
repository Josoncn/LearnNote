学习地址：https://blog.csdn.net/qq_38410730/article/details/102477162

#CMakeLists.h会自动创建两个和变量，PROJECT_SOURCE_DIR和PROJECT_NAME

${PROJECT_SOURCE_DIR}：本CMakeLists.txt所在的文件夹路径
${PROJECT_NAME}：本CMakeLists.txt的project名称

1.
#project 创建项目
例：project(ReadCsvData)

2.
#set(变量 文件名/路径/...) 给文件名/路径名或其他字符串起别名，用${变量}获取变量内容
例：set(SOURCEFILES "${PROJECT_SOURCE_DIR}/include/ReadCsvData.h" "${PROJECT_SOURCE_DIR}/include/ReadCsvData.cpp")

3.
#list( APPEND 变量 文件) 给变量添加文件，但是需要先创建变量
例：list(APPEND ImageStream   "${PROJECT_SOURCE_DIR}/../../base/videostream/Rtspstreamserver.cpp" "${PROJECT_SOURCE_DIR}/../../base/videostream/Rtspstreamserver.h")

4.
#add_executable(可执行文件名称 文件) 将.cpp/.c/.cc文件生成可执行文件
例：add_executable(Roseek ${SRC_FILES} ${HEAD_FILES} ${RC_FILES} ${BASE_SRC})

5.
#source_group("组名" FILES 文件/文件变量)，添加分组，使用自己的项目分组
例：source_group("grpc" FILES ${CameraGrpcFile}) //在添加执行文件的时候直接添加变量即可

6.
#cmake_minimum_required(VERSION x.xx) 指定最小cmake编译版本
例：cmake_minimum_required(VERSION 3.10)

7.
#message(${TEST_IT_CMAKE} "xxxxx") 进行信息的输出
例：message("itis" ${TEST_IT_CMAKE})

8.
#ADD_DEFINITIONS( /Zi ) 添加编译选项，进行编译设置
例：add_definitions(-DTEST_IT_CMAKE)

9.
#FILE(GLOB SRC_FILES "./.cpp") 快速进行文件变量的操作
例：FILE(GLOB RC_FILES "./*.rc")

10.
#add_subdirectory(ImageDbReader) 添加子目录，对子目录下的CMakeLists.txt也会进行编译，变量名会继承父级
例：add_subdirectory(ImageDbReaderDir)

11.
#link_directories(${PROJECT_SOURCE_DIR}/../../third_party/sqlite/lib/X64) 对于静态库的连接地址的设置
例：link_directories(${PROJECT_SOURCE_DIR}/../../third_party/sqlite/lib/X64)

12.
#target_link_libraries(ImageAlgorithmTest ${BaseLibs} ${DEPS}) 添加执行的静态库文件
例：target_link_libraries(ImageAlgorithmTest ${BaseLibs} ${DEPS})

13.